{"version":3,"file":"static/js/675.7ccf7552.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","components/Contacts/Filter.jsx","webpack://react-homework-template/./src/components/FormPhonebook/FormPhonebook.module.css?d55d","components/FormPhonebook/FormPhonebook.jsx","Page/UserContacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"Contacts_contactList__l6+qO\",\"contactItem\":\"Contacts_contactItem__qm4r1\",\"btnDelete\":\"Contacts_btnDelete__j5p-J\",\"labelFilter\":\"Contacts_labelFilter__xGm4a\",\"inputFilter\":\"Contacts_inputFilter__61oi+\"};","import css from './Contacts.module.css';\nimport PropTypes from 'prop-types';\n\nimport { fetchContacts, deleteContact } from 'redux/contactsOperations';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(\n    state => state.contacts.contacts\n  );\n\n  const filter = useSelector(state => state.filter.filter);\n  const filterArr = items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const onClickDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.contactList}>\n      {isLoading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n        />\n      )}\n      {error && <h2> An error occured {error}</h2>}\n\n      {items.length === 0 ? (\n        <p style={{ marginLeft: '30px' }}>There are no contact</p>\n      ) : filter !== '' ? (\n        filterArr.map(({ name, id, number }) => {\n          return (\n            <li key={id} className={css.contactItem}>\n              <p>\n                {name} : {number}\n              </p>\n              <button\n                className={css.btnDelete}\n                type=\"button\"\n                onClick={() => onClickDeleteContact(id)}\n              >\n                X\n              </button>\n            </li>\n          );\n        })\n      ) : (\n        items.map(({ name, id, number }) => {\n          return (\n            <li key={id} className={css.contactItem}>\n              <p>\n                {name} : {number}\n              </p>\n              <button\n                className={css.btnDelete}\n                type=\"button\"\n                onClick={() => onClickDeleteContact(id)}\n              >\n                X\n              </button>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n};\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Contacts;\n","import css from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { addFilter } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  const onChangeFilterContact = e => {\n    dispatch(addFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.labelFilter}>\n      Find contacts by name\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilterContact}\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormPhonebook_form__yE3-g\",\"inputPhonebook\":\"FormPhonebook_inputPhonebook__Jo5R7\",\"btnAddContact\":\"FormPhonebook_btnAddContact__fciev\"};","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './FormPhonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsOperations';\nimport { nanoid } from 'nanoid';\n\nconst FormPhonebook = () => {\n  const [nameContact, setNameContact] = useState('');\n  const [numberContact, setNumberContact] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  const saveData = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setNameContact(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumberContact(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onSubmitAddContact = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === nameContact)) {\n      alert(`${nameContact} is already in contacts`);\n      setNameContact('');\n      setNumberContact('');\n      return;\n    }\n    const contact = {\n      name: nameContact,\n      number: numberContact,\n      id: nanoid(),\n    };\n    dispatch(addContact(contact));\n    setNameContact('');\n    setNumberContact('');\n  };\n\n  return (\n    <form onSubmit={onSubmitAddContact} className={css.form}>\n      <label className={css.inputPhonebook}>\n        Name:\n        <input\n          onChange={saveData}\n          value={nameContact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.inputPhonebook}>\n        Number:\n        <input\n          onChange={saveData}\n          value={numberContact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.btnAddContact} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nFormPhonebook.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport default FormPhonebook;\n","import Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Contacts/Filter';\nimport FormPhonebook from 'components/FormPhonebook/FormPhonebook';\nimport { useSelector } from 'react-redux';\n\nconst UserContacts = () => {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  return (\n    <>\n      {isLoggedIn ? (\n        <main>\n          <h1 style={{ marginLeft: '50px' }}>Phonebook</h1>\n          <FormPhonebook />\n          <h2 style={{ marginLeft: '50px' }}>Contacts</h2>\n\n          <Filter />\n          <Contacts />\n        </main>\n      ) : (\n        <p>Please Authozate</p>\n      )}\n    </>\n  );\n};\nexport default UserContacts;\n"],"names":["dispatch","useDispatch","useSelector","state","contacts","items","isLoading","error","filter","filterArr","contact","name","toLowerCase","includes","onClickDeleteContact","contactId","deleteContact","useEffect","fetchContacts","className","css","visible","height","width","ariaLabel","wrapperClass","colors","length","style","marginLeft","map","id","number","type","onClick","value","onChange","e","addFilter","target","useState","nameContact","setNameContact","numberContact","setNumberContact","saveData","currentTarget","onSubmit","preventDefault","find","alert","nanoid","addContact","pattern","title","required","isLoggedIn","auth"],"sourceRoot":""}